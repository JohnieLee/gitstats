#!/usr/bin/env python2
# Copyright (c) 2007-2014 Heikki Hokkanen <hoxu@users.sf.net> & others (see doc/AUTHOR)
# GPLv2 / GPLv3
import datetime
import getopt
import glob
import os
import pickle
import platform
import re
import shutil
import subprocess
import sys
import time
import zlib

from DataCollector import DataCollector
from GitDataCollector import GitDataCollector
from ReportCreator import ReportCreator
from HTMLReportCreator import HTMLReportCreator
from helper import *

if sys.version_info < (2, 6):
    print >> sys.stderr, "Python 2.6 or higher is required for gitstats"
    sys.exit(1)

from multiprocessing import Pool

os.environ['LC_ALL'] = 'C'

GNUPLOT_COMMON = 'set terminal png transparent size %s\nset size 1.0,1.0\n'
WEEKDAYS = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')

#exectime_internal = 0.0
#exectime_external = 0.0
#time_start = time.time()

# By default, gnuplot is searched from path, but can be overridden with the
# environment variable "GNUPLOT"
gnuplot_cmd = 'gnuplot'
if 'GNUPLOT' in os.environ:
    gnuplot_cmd = os.environ['GNUPLOT']

conf = {
    'max_domains': 10,
    'max_ext_length': 10,
    'style': 'gitstats.css',
    'max_authors': 20,
    'authors_top': 5,
    'commit_begin': '',
    'commit_end': 'HEAD',
    'linear_linestats': 1,
    'project_name': '',
    'processes': 8,
    'start_date': '',
    'image_resolution': '1280,640',
    'date_format': '%Y-%m-%d',
    'authors_merge': '{}'
}

def usage():
    print """
Usage: gitstats [options] <gitpath..> <outputpath>

Options:
-c key=value     Override configuration value

Default config values:
%s

Please see the manual page for more details.
""" % conf


class GitStats:
    def run(self, args_orig):
        global GNUPLOT_COMMON
        optlist, args = getopt.getopt(args_orig, 'hc:', ["help"])
        for o,v in optlist:
            if o == '-c':
                key, value = v.split('=', 1)
                if key not in conf:
                    raise KeyError('no such key "%s" in config' % key)
                if isinstance(conf[key], int):
                    conf[key] = int(value)
                else:
                    conf[key] = value
            elif o in ('-h', '--help'):
                usage()
                sys.exit()
                conf['authors_merge'] = eval(conf['authors_merge'])
                GNUPLOT_COMMON = GNUPLOT_COMMON % conf['image_resolution']

        if len(args) < 2:
            usage()
            sys.exit(0)

        outputpath = os.path.abspath(args[-1])
        rundir = os.getcwd()

        try:
            os.makedirs(outputpath)
        except OSError:
            pass
        if not os.path.isdir(outputpath):
            print 'FATAL: Output path is not a directory or does not exist'
            sys.exit(1)

        #if not getgnuplotversion():
        #    print 'gnuplot not found'
        #    sys.exit(1)

        print 'Output path: %s' % outputpath
        cachefile = os.path.join(outputpath, 'gitstats.cache')

        data = GitDataCollector(conf)
        data.loadCache(cachefile)

        for gitpath in args[0:-1]:
            print 'Git path: %s' % gitpath

            prevdir = os.getcwd()
            os.chdir(gitpath)

            print 'Collecting data...'
            data.collect(gitpath)

            os.chdir(prevdir)

        print 'Refining data...'
        data.saveCache(cachefile)
        data.refine()

        os.chdir(rundir)

        print 'Generating report...'
        report = HTMLReportCreator(conf)
        report.create(data, outputpath)

        #time_end = time.time()
        #exectime_internal = time_end - time_start
        #print 'Execution time %.5f secs, %.5f secs (%.2f %%) in external commands)' % (exectime_internal, exectime_external, (100.0 * exectime_external) / exectime_internal)
        if sys.stdin.isatty():
            print 'You may now run:'
            print
            print '   sensible-browser \'%s\'' % os.path.join(outputpath, 'index.html').replace("'", "'\\''")
            print

if __name__=='__main__':
    g = GitStats()
    g.run(sys.argv[1:])

